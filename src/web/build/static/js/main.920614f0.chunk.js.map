{"version":3,"sources":["config.js","axios/LoginRequest.js","axios/LogoutRequest.js","hooks/useClick.js","hooks/useAxios.js","hooks/useAuth.js","hooks/useInput.js","axios/AuthRequest.js","axios/RequestCreate.js","axios/RequestDelete.js","components/Util/Navigation.js","components/Util/Title.js","components/Util/Footer.js","routes/Main.js","routes/Login.js","components/Util/Loading.js","components/Project/List.js","components/Project/View.js","components/Project/Home.js","components/Project/Create.js","components/Project/Modify.js","routes/Project.js","components/Modal/StackCreate.js","components/Modal/RelatedProject.js","components/Stack/Item.js","components/Stack/Add.js","components/Stack/Home.js","components/Stack/Modify.js","routes/Stack.js","routes/About.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","urls","auth","login","logout","project","index","show","store","stack","list","delete","LoginRequest","email","password","history","url","axios","method","data","then","message","token","alert","localStorage","setItem","push","catch","error","response","status","LogoutRequest","getItem","defaultAxios","create","headers","Authorization","authAxios","console","log","finally","removeItem","window","location","reload","useClick","onClick","trigger","element","useRef","useEffect","current","addEventListener","removeEventListener","useAxios","opts","axiosInstance","useState","loading","state","setstate","refetch","useAuth","useInput","initialValue","validator","value","setValue","onChange","event","target","willUpdate","AuthRequest","isAuth","RequestCreate","nextUrl","formData","Axios","msg","href","RequestDelete","Navigation","pathname","useLocation","split","isLogin","selectedClassName","selectedMenu","main","about","className","to","Title","titleName","Footer","Main","Login","id","type","placeholder","length","Loading","ProjectList","projects","projectId","map","title","content","parseInt","style","position","top","left","transform","fontFamily","fontWeight","ProjectView","setId","lineHeight","width","repo_url","start_date","img_url","end_date","role","stacks","rel","confirm","item","ProjectHome","match","path","List","View","params","isNaN","ProjectCreate","repoUrl","imgFile","setImgFile","imgFileUrl","setImgFileUrl","stackIds","setStackIds","selectedStack","setSelectedStack","startDate","date","endDate","stackList","onChangeImg","a","file","files","options","maxSizeMB","maxWidthOrHeight","imageCompression","compressedImgFile","getDataUrlFromFile","result","onAddMouseEnterHandler","backgroundColor","borderColor","color","onAddMouseLeaveHandler","onAddStackHandler","getAttribute","find","concat","removeStackHandler","tmpSeletedStack","filter","height","background","accept","border","onMouseEnter","onMouseLeave","maxLength","FormData","append","forEach","ProjectModify","Project","component","Create","Modify","Home","Modal","setAppElement","customStyles","right","bottom","marginRight","ModalStack","controller","modalIsOpen","setModalIsOpen","skillfulList","name","setName","skillful","setSkillful","frequency","setFrequency","setColor","onChangeColor","closeModal","isOpen","onRequestClose","contentLabel","toUpperCase","backgroundSize","ele","idx","RelatedProject","info","stackId","relatedProjects","onMouseEnterHandler","onMouseLeaveHandler","StackItem","stackImg","openBtn","classList","ref","StackAdd","addBtn","StackHome","stackData","StackModify","Stack","About","region","tel","github","career","introduce","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.920614f0.chunk.js","sourcesContent":["// const baseURL = \"http://laravel.test/api\";\nconst baseURL = \"http://www.94soon.net/api\";\n\nconst urls = {\n  auth: `${baseURL}/auth`,\n  login: `${baseURL}/login`,\n  logout: `${baseURL}/logout`,\n  project: {\n    index: `${baseURL}/project`,\n    show: `${baseURL}/project`,\n    store: `${baseURL}/project`,\n  },\n  stack: {\n    index: `${baseURL}/stack`,\n    show: `${baseURL}/stack`,\n    list: `${baseURL}/stack/list`,\n    store: `${baseURL}/stack`,\n    delete: `${baseURL}/stack`,\n  },\n};\n\nexport { urls };\n","import axios from \"axios\";\nimport { urls } from \"../config\";\n\nconst LoginRequest = ({ email, password, history }) => {\n  const url = urls.login;\n  axios({\n    method: \"post\",\n    url,\n    data: {\n      email,\n      password,\n    },\n  })\n    .then((data) => {\n      const { message, token } = data.data;\n      alert(message);\n      localStorage.setItem(\"token\", token);\n      history.push(\"/\");\n    })\n    .catch((error) => {\n      if (error.response) {\n        const {\n          status,\n          data: { message },\n        } = error.response;\n\n        return status === 401\n          ? alert(message)\n          : status === 422\n          ? alert(\"잘못된 로그인 정보입니다.\")\n          : status === 500\n          ? alert(\"서버로부터 응답이 올바르지 않습니다.\")\n          : alert(\"로그인에 실패하였습니다.\");\n      }\n      history.push(\"/\");\n      return;\n    });\n};\n\nexport default LoginRequest;\n","import defaultAxios from \"axios\";\nimport { urls } from \"../config\";\n\nconst LogoutRequest = () => {\n  const url = urls.logout;\n  const token = localStorage.getItem(\"token\");\n  const authAxios = defaultAxios.create({\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  });\n\n  authAxios({\n    method: \"post\",\n    url,\n  })\n    .then((data) => {\n      if (data && data.status === 201) {\n        const { message } = data.data;\n        alert(message);\n        return;\n      }\n    })\n    .catch((error) => {\n      console.log(error.response);\n      if (error && error.response && error.response.status === 401) {\n        const { message } = error.response.data;\n        alert(message);\n        return;\n      }\n\n      alert(\"서버로부터 응답이 올바르지 않습니다.\");\n      return;\n    })\n    .finally(() => {\n      localStorage.removeItem(\"token\");\n      window.location.reload();\n    });\n};\n\nexport default LogoutRequest;\n","import { useEffect, useRef } from \"react\";\n\nconst useClick = (onClick, trigger) => {\n  const element = useRef();\n\n  useEffect(() => {\n    if (typeof onClick !== \"function\") {\n      return;\n    }\n    if (element.current) {\n      element.current.addEventListener(\"click\", onClick);\n    }\n    return () => {\n      if (element.current) {\n        element.current.removeEventListener(\"click\", onClick);\n      }\n    };\n  }, [trigger]);\n  return element;\n};\n\nexport default useClick;\n","import defaultAxios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst useAxios = (opts, trigger, axiosInstance = defaultAxios) => {\n  const [state, setstate] = useState({\n    loading: true,\n    error: null,\n    data: null,\n  });\n  const refetch = () => {\n    setstate({\n      ...state,\n      loading: true,\n    });\n  };\n  useEffect(() => {\n    if (!opts.url) {\n      return;\n    }\n    axiosInstance(opts)\n      .then((data) => {\n        setstate({ ...state, loading: false, data });\n      })\n      .catch((error) => {\n        setstate({ ...state, loading: false, error });\n      });\n  }, [trigger]);\n  return { ...state, refetch };\n};\n\nexport default useAxios;\n","import defaultAxios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst useAuth = (opts, token) => {\n  const [state, setstate] = useState({\n    loading: true,\n    error: null,\n    data: null,\n  });\n  const authAxios = defaultAxios.create({\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  });\n\n  const refetch = () => {\n    setstate({\n      ...state,\n      loading: true,\n    });\n  };\n\n  useEffect(() => {\n    if (!opts.url) {\n      return;\n    }\n    if (!token) {\n      return;\n    }\n    authAxios(opts)\n      .then((data) => {\n        setstate({ ...state, loading: false, data });\n      })\n      .catch((error) => {\n        setstate({ ...state, loading: false, error });\n      });\n\n    return;\n  }, [token]);\n  return { ...state, refetch };\n};\n\nexport default useAuth;\n","import { useState } from \"react\";\n\nconst useInput = (initialValue, validator) => {\n  const [value, setValue] = useState(initialValue);\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    let willUpdate = true;\n    if (typeof validator === \"function\") {\n      willUpdate = validator(value);\n    }\n    if (willUpdate) {\n      setValue(value);\n    }\n  };\n\n  return { value, onChange };\n};\n\nexport default useInput;\n","import { useAuth } from \"../hooks\";\nimport { urls } from \"../config\";\n\nconst AuthRequest = () => {\n  const url = urls.auth;\n  const token = localStorage.getItem(\"token\");\n  const { data, error } = useAuth(\n    {\n      method: \"get\",\n      url,\n    },\n    token,\n  );\n\n  if (data && data.status === 201) {\n    const { isAuth } = data.data;\n    return isAuth;\n  }\n\n  if (error && error.response && error.response.status === 401) {\n    const { message } = error.response.data;\n    alert(message);\n    localStorage.removeItem(\"token\");\n    return false;\n  }\n\n  return false;\n};\n\nexport default AuthRequest;\n","import Axios from \"axios\";\n\nconst RequestCreate = ({ url, nextUrl, formData }) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    return;\n  }\n\n  const authAxios = Axios.create({\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"content-type\": \"multipart/form-data\",\n    },\n  });\n  const options = {\n    method: \"post\",\n    url,\n    data: formData,\n  };\n\n  authAxios(options)\n    .then((data) => {\n      if (data && data.status === 201) {\n        const { msg } = data.data;\n        alert(msg);\n        window.location.href = nextUrl;\n      }\n      return true;\n    })\n    .catch((error) => {\n      if (error.response) {\n        const {\n          status,\n          data: { message },\n        } = error.response;\n\n        console.log(error.response.data);\n        return status === 401\n          ? alert(message)\n          : status === 422\n          ? alert(\"이미 등록되었거나, 잘못된 값을 입력하였습니다.\")\n          : status === 500\n          ? alert(\"서버로부터 응답이 올바르지 않습니다.\")\n          : alert(\"등록에 실패하였습니다.\");\n      }\n      return false;\n    });\n  return false;\n};\n\nexport default RequestCreate;\n","import Axios from \"axios\";\n\nconst RequestDelete = ({ url, nextUrl }) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    return;\n  }\n\n  const authAxios = Axios.create({\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  });\n  const options = {\n    method: \"delete\",\n    url,\n  };\n\n  authAxios(options)\n    .then((data) => {\n      console.log(data.data);\n      if (data && data.status === 200) {\n        const { msg } = data.data;\n        alert(msg);\n        window.location.href = nextUrl;\n      }\n      return;\n    })\n    .catch((error) => {\n      if (error.response) {\n        const {\n          status,\n          data: { message },\n        } = error.response;\n\n        console.log(error.response.data);\n        return status === 401\n          ? alert(message)\n          : alert(\"삭제에 실패하였습니다.\");\n      }\n      return;\n    });\n  return;\n};\n\nexport default RequestDelete;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { LogoutRequest, AuthRequest } from \"../../axios\";\nimport \"./Navigation.css\";\n\nconst Navigation = () => {\n  const pathname = useLocation().pathname.split(\"/\")[1];\n  const isLogin = AuthRequest();\n\n  const name = pathname === \"\" ? \"main\" : pathname;\n  const selectedClassName = \" selected\";\n  const selectedMenu = {\n    main: false,\n    project: false,\n    stack: false,\n    about: false,\n  };\n  selectedMenu[name] = true;\n  const { main, project, stack, about } = selectedMenu;\n\n  return (\n    <div className=\"nav\">\n      <div className=\"wrapper\">\n        <ul className=\"nav-menus\">\n          <li className={\"nav-menu\" + (main ? selectedClassName : \"\")}>\n            <Link to=\"/\">Main</Link>\n          </li>\n          <li className={\"nav-menu\" + (project ? selectedClassName : \"\")}>\n            <Link to=\"/project\">My Project</Link>\n          </li>\n          <li className={\"nav-menu\" + (stack ? selectedClassName : \"\")}>\n            <Link to=\"/stack\">Tech Stack</Link>\n          </li>\n          <li className={\"nav-menu\" + (about ? selectedClassName : \"\")}>\n            <Link to=\"/about\">About Me</Link>\n          </li>\n\n          {/* TODO 로그인 여부에 따라서 로그아웃, 로그인 */}\n          {isLogin ? (\n            <button className=\"btn\" onClick={LogoutRequest}>\n              LOGOUT\n            </button>\n          ) : (\n            <Link to=\"/login\" className=\"btn\">\n              LOGIN\n            </Link>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = ({ titleName }) => {\n  return <div className=\"main-title\">{titleName}</div>;\n};\n\nexport default Title;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>YEUNGJIN UNIVERSITY</p>\n      <p>COPYRIGHT© JEONG JAE SOON. All RIGHTS RESERVED.</p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./Main.css\";\n\nconst Main = () => {\n  return (\n    <div className=\"main\">\n      <div className=\"profile-img\"></div>\n      <p className=\"profile-name\">JEONG JAE SOON</p>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useInput } from \"../hooks\";\nimport { LoginRequest } from \"../axios\";\nimport \"./Login.css\";\n\nconst Login = ({ history }) => {\n  const id = useInput(\"\");\n  const password = useInput(\"\");\n\n  const onLoginHandler = () => {\n    if (id.value && password.value) {\n      if (password.value.length < 6) {\n        alert(\"비밀번호는 최소 6자리 이상입니다.\");\n        return;\n      }\n      LoginRequest({ email: id.value, password: password.value, history });\n    }\n\n    return id.value === \"\"\n      ? alert(\"이메일 주소를 입력해주세요.\")\n      : password.value === \"\"\n      ? alert(\"비밀번호를 입력해 주세요\")\n      : \"\";\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"left\">\n        <div className=\"wrapper\">\n          <div className=\"title\">LOGIN</div>\n          <div>\n            <div className=\"id\">\n              <input type=\"text\" placeholder=\"이메일\" {...id} />\n              <i className=\"fas fa-user\" />\n            </div>\n            <div className=\"password\">\n              <input type=\"password\" placeholder=\"비밀번호\" {...password} />\n              <i className=\"fas fa-lock\"></i>\n            </div>\n            <Link to=\"/\">비밀번호를 잊으셨나요?</Link>\n            <button className=\"login-btn\" onClick={onLoginHandler}>\n              로그인\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"right\">\n        <div className=\"wrapper\">\n          <div className=\"title\">Hello, Guest!</div>\n          <div className=\"content\">\n            <p>안녕하세요! 영진전문대학교 </p>\n            <p>컴퓨터 정보 계열 “정재순” 입니다.</p>\n            <p>&nbsp;</p>\n            <p>제 포트폴리오 사이트에 방문하신 것을 환영합니다.</p>\n            <p>이 페이지는 React.js 와 laravel 로 제작되었습니다</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport \"./Loading.css\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-wrapper\">\n      <div className=\"loading\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n      <div className=\"text\">로딩중입니다.</div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects, projectId }) => {\n  const token = localStorage.getItem(\"token\");\n  if (!projects && !projectId) {\n    return (\n      <div className=\"list\" style={{ position: \"relative\" }}>\n        <p\n          className=\"msg\"\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            fontFamily: \"Noto sans, sans-serif\",\n            fontWeight: 300,\n          }}\n        >\n          {token ? \"프로젝트를 추가해주세요.\" : \"등록된 프로젝트가 없습니다.\"}\n        </p>\n      </div>\n    );\n  }\n  return (\n    <div className=\"list\">\n      <div className=\"list-title\">My Project List</div>\n      <div className=\"list-wrapper\">\n        {projects.map(({ id, title, content }) => {\n          return (\n            <div\n              className={`list-content ${\n                id === parseInt(projectId) ? \"project-selected\" : \"\"\n              }`}\n              key={id}\n            >\n              <Link to={`/project/${id}`} className=\"project-title\">\n                {title}\n              </Link>\n              <p className=\"project-content\">{content}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RequestDelete } from \"../../axios\";\nimport { useAxios } from \"../../hooks\";\nimport { urls } from \"../../config\";\n\nconst ProjectView = ({ projectId }) => {\n  const [id, setId] = useState(projectId);\n  const url = urls.project.show + `/${id}`;\n  const token = localStorage.getItem(\"token\");\n\n  if (projectId !== id) {\n    setId(projectId);\n  }\n\n  const { loading, error, data } = useAxios(\n    {\n      method: \"get\",\n      url,\n    },\n    id,\n  );\n\n  if (!projectId) {\n    return (\n      <div\n        className=\"view\"\n        style={{\n          position: \"relative\",\n          fontFamily: \"Noto sans, sans-serif\",\n          fontWeight: 300,\n        }}\n      >\n        <p\n          style={{\n            lineHeight: \"10\",\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"100%\",\n          }}\n        >\n          {token ? (\n            <Link to=\"/project/create\" className=\"project-menu\">\n              추가\n            </Link>\n          ) : (\n            \"로그인 후, 프로젝트를 추가할 수 있습니다.\"\n          )}\n        </p>\n      </div>\n    );\n  }\n\n  if (loading || error) {\n    return (\n      <div className=\"view\">\n        <div className=\"loading\">\n          {loading\n            ? \"로딩중입니다\"\n            : error\n            ? \"상세정보 조회에 실패하였습니다.\"\n            : \"\"}\n        </div>\n      </div>\n    );\n  }\n\n  const {\n    title,\n    repo_url,\n    img_url,\n    start_date,\n    end_date,\n    role,\n    // stacks,\n  } = data.data.project;\n\n  const onDeleteHandler = () => {\n    const nextUrl = \"/project\";\n    const flag = window.confirm(\"삭제하시겠습니까?\");\n    if (!flag) {\n      return;\n    }\n    RequestDelete({ url, nextUrl });\n  };\n\n  const stacks = [\"aa\", \"bb\", \"cc\"];\n  return (\n    <div className=\"view\">\n      <div className=\"header\">\n        <div className=\"left\">\n          <p className=\"title\">{title}</p>\n          <a target=\"_blank\" rel=\"noreferrer\" href={repo_url} className=\"url\">\n            클릭 시, GitHub Repository 로 이동합니다.\n          </a>\n        </div>\n        <div className=\"right\">\n          {token ? (\n            <>\n              <Link to=\"/project/create\" className=\"project-menu\">\n                추가\n              </Link>\n              {/* <Link to={`/project/modify/${id}`} className=\"project-menu\">\n                수정\n              </Link> */}\n              <div className=\"project-menu\" onClick={onDeleteHandler}>\n                삭제\n              </div>\n            </>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      <div className=\"section\">\n        <div className=\"img\"></div>\n        <ul className=\"info\">\n          <li>\n            <span className=\"title\">기술 스택</span>\n            <span className=\"value\">\n              {stacks.map((item, index) => {\n                if (index === stacks.length - 1) return item;\n                return item + \", \";\n              })}\n            </span>\n          </li>\n          <li>\n            <span className=\"title\">개발 기간</span>\n            <span className=\"value\">\n              {start_date.split(\" \")[0]} ~ {end_date.split(\" \")[0]}\n            </span>\n          </li>\n          <li>\n            <span className=\"title\">담당 역할</span>\n            <span className=\"value\">{role}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectView;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useAxios } from \"../../hooks\";\nimport { urls } from \"../../config\";\nimport Loading from \"../Util/Loading\";\nimport Title from \"../Util/Title\";\nimport List from \"./List\";\nimport View from \"./View\";\n\nimport \"./Home.css\";\n\nconst ProjectHome = ({ match }) => {\n  const url = urls.project.index;\n  const { loading, error, data } = useAxios({\n    method: \"get\",\n    url,\n  });\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (error) {\n    alert(\"데이터 조회에 실패하였습니다.\");\n    return <Redirect path=\"/project/*\" to=\"/\" />;\n  }\n\n  const { projects } = data.data;\n\n  if (projects.length === 0) {\n    return (\n      <>\n        <Title titleName=\"My Project\" />\n        <div className=\"project-home\">\n          <List />\n          <View />\n        </div>\n      </>\n    );\n  }\n\n  const projectId = match.params.projectId || projects[0].id;\n\n  return (\n    <>\n      {isNaN(projectId) ? (\n        <Redirect path=\"/project/*\" to=\"/project\" />\n      ) : (\n        <>\n          <Title titleName=\"My Project\" />\n          <div className=\"project-home\">\n            <List projects={projects} projectId={projectId} />\n            <View projectId={projectId} />\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProjectHome;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport imageCompression from \"browser-image-compression\";\nimport { useAuth, useInput } from \"../../hooks\";\nimport { urls } from \"../../config\";\nimport Title from \"../Util/Title\";\n\nimport \"./Create.css\";\nimport { RequestCreate } from \"../../axios\";\n\nconst ProjectCreate = () => {\n  const url = urls.stack.list;\n  const token = localStorage.getItem(\"token\");\n  const stacks = [];\n\n  const title = useInput(\"\");\n  const repoUrl = useInput(\"\");\n  const [imgFile, setImgFile] = useState(null);\n  const [imgFileUrl, setImgFileUrl] = useState(\"\");\n  const [stackIds, setStackIds] = useState([]);\n  const content = useInput(\"\", (value) => {\n    return value.length < 87;\n  });\n  const [selectedStack, setSelectedStack] = useState([]);\n  const startDate = useInput(\"\", (date) => {\n    if (!endDate.value) {\n      return true;\n    }\n    return endDate.value > date;\n  });\n  const endDate = useInput(\"\", (date) => {\n    if (!startDate.value) {\n      return true;\n    }\n    return startDate.value < date;\n  });\n  const role = useInput(\"\");\n\n  const { data, error } = useAuth(\n    {\n      method: \"get\",\n      url,\n    },\n    token,\n  );\n\n  if (error) {\n    alert(error);\n  }\n\n  if (data) {\n    const { stackList } = data.data;\n    stackList.map((element) => {\n      stacks.push(element);\n    });\n  }\n\n  const onChangeImg = async ({ target }) => {\n    const file = target.files[0];\n    const options = {\n      maxSizeMB: 2,\n      maxWidthOrHeight: 150,\n    };\n    try {\n      const compressedImgFile = await imageCompression(file, options);\n      setImgFile(file);\n      const promise = imageCompression.getDataUrlFromFile(compressedImgFile);\n      promise.then((result) => {\n        setImgFileUrl(result);\n      });\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const onAddMouseEnterHandler = (event) => {\n    event.target.style.backgroundColor = event.target.style.borderColor;\n    event.target.style.color = \"#ffffff\";\n  };\n  const onAddMouseLeaveHandler = (event) => {\n    event.target.style.color = event.target.style.backgroundColor;\n    event.target.style.backgroundColor = \"initial\";\n  };\n  const onStoreHandler = () => {\n    if (\n      title.value &&\n      repoUrl.value &&\n      imgFile &&\n      content.value &&\n      stackIds &&\n      startDate.value &&\n      endDate.value &&\n      role.value\n    ) {\n      const flag = window.confirm(\"생성하시겠습니까?\");\n      if (!flag) {\n        return;\n      }\n      const nextUrl = \"/project\";\n      const formData = new FormData();\n      formData.append(\"title\", title.value);\n      formData.append(\"repo_url\", repoUrl.value);\n      formData.append(\"img_url\", imgFile);\n      formData.append(\"content\", content.value);\n      stackIds.forEach((item) => {\n        formData.append(\"stacks[]\", item);\n      });\n      formData.append(\"start_date\", startDate.value);\n      formData.append(\"end_date\", endDate.value);\n      formData.append(\"role\", role.value);\n      RequestCreate({ url: urls.project.store, nextUrl, formData });\n    } else {\n      alert(\"모두 입력하였는지 확인해주세요.\");\n      return;\n    }\n  };\n  const onAddStackHandler = (event) => {\n    const item = {\n      id: event.target.getAttribute(\"id\"),\n      title: event.target.getAttribute(\"title\"),\n      color: event.target.getAttribute(\"color\"),\n    };\n\n    const found = selectedStack.find((element) => {\n      return element.id === item.id;\n    });\n\n    if (found) {\n      return;\n    }\n    setSelectedStack(selectedStack.concat(item));\n    setStackIds(stackIds.concat(parseInt(item.id)));\n  };\n  const removeStackHandler = (event) => {\n    const id = event.target.getAttribute(\"id\");\n    const tmpSeletedStack = selectedStack.filter((element) => {\n      return element.id !== id;\n    });\n\n    setSelectedStack(tmpSeletedStack);\n  };\n\n  return (\n    <>\n      {token ? (\n        <>\n          <Title titleName=\"Create My Project\" />\n          <div className=\"project-create\">\n            <div className=\"left\">\n              <div className=\"project-title\">\n                <input type=\"text\" placeholder=\"프로젝트 명\" {...title} />\n                <input\n                  type=\"url\"\n                  placeholder=\"GitHub Repository 주소\"\n                  {...repoUrl}\n                />\n              </div>\n              <div className=\"project-img\">\n                <div\n                  className=\"img-show\"\n                  style={{\n                    width: \"180px\",\n                    height: \"180px\",\n                    background: `url(${imgFileUrl}) center/180px no-repeat`,\n                  }}\n                ></div>\n                <input\n                  type=\"file\"\n                  accept=\"image/gif, image/jpeg, image/jpg, image/png\"\n                  className=\"img-btn\"\n                  onChange={onChangeImg}\n                />\n              </div>\n              <textarea\n                className=\"project-content\"\n                placeholder=\"프로젝트 소개글을 작성하세요\"\n                {...content}\n              ></textarea>\n            </div>\n            <div className=\"right\">\n              <div className=\"project-sub-title\">상세 정보</div>\n              <ul>\n                <li className=\"stacks\">\n                  <div className=\"title\">개발 스택</div>\n                  <div className=\"value\">\n                    <div className=\"wrapper\">\n                      <ul className=\"stack-selected\">\n                        {selectedStack.map((element) => {\n                          return (\n                            <li\n                              className=\"stack\"\n                              key={element.id}\n                              style={{\n                                backgroundColor: element.color,\n                                color: \"#ffffff\",\n                              }}\n                              id={element.id}\n                              onClick={removeStackHandler}\n                            >\n                              {element.title}\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      <div className=\"txt\">사용 기술</div>\n                    </div>\n                    <div className=\"wrapper\">\n                      <ul className=\"stack-list\">\n                        {stacks.map((element) => {\n                          return (\n                            <li\n                              className=\"stack\"\n                              key={element.id}\n                              style={{\n                                border: `1px solid ${element.color}`,\n                                color: element.color,\n                              }}\n                              id={element.id}\n                              title={element.title}\n                              color={element.color}\n                              onMouseEnter={onAddMouseEnterHandler}\n                              onMouseLeave={onAddMouseLeaveHandler}\n                              onClick={onAddStackHandler}\n                            >\n                              {element.title}\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      <div className=\"txt\">기술 목록</div>\n                    </div>\n                  </div>\n                </li>\n                <li className=\"date\">\n                  <div className=\"title\">개발 기간</div>\n                  <div className=\"value\">\n                    <input type=\"date\" className=\"start-date\" {...startDate} />\n                    <p>~</p>\n                    <input type=\"date\" className=\"end-date\" {...endDate} />\n                  </div>\n                </li>\n                <li className=\"role\">\n                  <div className=\"title\">담당 역할</div>\n                  <div className=\"value\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"21자 이내로 작성하세요.\"\n                      maxLength=\"21\"\n                      {...role}\n                    />\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <button className=\"create-btn\" onClick={onStoreHandler}>\n            저장\n          </button>\n        </>\n      ) : (\n        <Redirect path=\"*\" to=\"/project\" />\n      )}\n    </>\n  );\n};\n\nexport default ProjectCreate;\n","import React from \"react\";\n\nconst ProjectModify = () => {\n  return <>프로젝트 수정니다.</>;\n};\n\nexport default ProjectModify;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Home, Create, Modify } from \"../components/Project\";\nimport \"./Project.css\";\n\nconst Project = () => {\n  return (\n    <div className=\"project\">\n      <Switch>\n        <Route path=\"/project/create\" component={Create} />\n        <Route path=\"/project/modify/:projectId\" component={Modify} />\n        <Route path=\"/project/:projectId\" component={Home} />\n        <Route path=\"/project/\" component={Home} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Project;\n","import React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport imageCompression from \"browser-image-compression\";\nimport { RequestCreate } from \"../../axios\";\nimport { urls } from \"../../config\";\n\nimport \"./StackCreate.css\";\n\nModal.setAppElement(\"#root\");\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 350,\n  },\n};\n\nconst ModalStack = ({ controller }) => {\n  const url = urls.stack.store;\n  const { modalIsOpen, setModalIsOpen } = controller;\n  const skillfulList = [\"최상\", \"상\", \"중상\", \"중\", \"중하\"];\n  const [name, setName] = useState(\"\");\n  const [imgFile, setImgFile] = useState(null);\n  const [imgFileUrl, setImgFileUrl] = useState(\"\");\n  const [skillful, setSkillful] = useState(skillfulList[0]);\n  const [frequency, setFrequency] = useState(0);\n  const [color, setColor] = useState(\"#000000\");\n\n  const onChangeName = ({ target }) => {\n    setName(target.value.toUpperCase());\n  };\n  const onChangeImg = async ({ target }) => {\n    const file = target.files[0];\n    const options = {\n      maxSizeMB: 2,\n      maxWidthOrHeight: 150,\n    };\n\n    try {\n      const compressedImgFile = await imageCompression(file, options);\n      setImgFile(file);\n      const promise = imageCompression.getDataUrlFromFile(compressedImgFile);\n      promise.then((result) => {\n        setImgFileUrl(result);\n      });\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const onChangeSkillFul = ({ target }) => {\n    setSkillful(target.value);\n  };\n  const onChangeFrequency = ({ target }) => {\n    const value = parseInt(target.value);\n    return isNaN(value)\n      ? setFrequency(0)\n      : value >= 0 && value <= 100\n      ? setFrequency(value)\n      : 0;\n  };\n  const onChangeColor = ({ target }) => {\n    setColor(target.value);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n    window.location.reload();\n  };\n  const onStoreHandler = () => {\n    if (imgFile && name) {\n      const flag = window.confirm(\"추가하시겠습니까?\");\n      if (!flag) {\n        return;\n      }\n      const nextUrl = \"/stack\";\n      const formData = new FormData();\n      formData.append(\"title\", name);\n      formData.append(\"img_url\", imgFile);\n      formData.append(\"skillful\", skillful);\n      formData.append(\"frequency\", frequency);\n      formData.append(\"color\", color);\n      RequestCreate({ url, nextUrl, formData });\n    } else {\n      alert(\"모두 입력하였는지 확인해주세요.\");\n      return;\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Stack Add\"\n    >\n      <div className=\"stack-modal\">\n        <div className=\"header\">\n          <div className=\"sub-title\">Add Tech Stack </div>\n          <button onClick={closeModal} className=\"close-btn\">\n            &#10005;\n          </button>\n        </div>\n        <div className=\"section\">\n          <input\n            type=\"text\"\n            className=\"name\"\n            placeholder=\"이름\"\n            value={name}\n            onChange={onChangeName}\n          />\n          <div\n            className=\"img-show\"\n            style={{\n              width: \"150px\",\n              height: \"150px\",\n              background: `url(${imgFileUrl}) center no-repeat`,\n              backgroundSize: \"contain\",\n            }}\n          ></div>\n          <input\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/jpg, image/png\"\n            className=\"img-btn\"\n            onChange={onChangeImg}\n          />\n          <ul>\n            <li>\n              <p className=\"title\">숙련도</p>\n              <p className=\"value\">\n                <select\n                  name=\"stack-skillful\"\n                  value={skillful}\n                  onChange={onChangeSkillFul}\n                >\n                  {skillfulList.map((ele, idx) => {\n                    return (\n                      <option key={idx} value={ele}>\n                        {ele}\n                      </option>\n                    );\n                  })}\n                </select>\n              </p>\n            </li>\n            <li>\n              <p className=\"title\">사용빈도</p>\n              <p className=\"value\">\n                <input\n                  type=\"text\"\n                  className=\"stack-frequency\"\n                  value={frequency}\n                  onChange={onChangeFrequency}\n                />\n              </p>\n            </li>\n            <li>\n              <p className=\"title\">대표색상</p>\n              <p className=\"value\">\n                <input\n                  type=\"color\"\n                  className=\"stack-color\"\n                  value={color}\n                  onChange={onChangeColor}\n                />\n                <input\n                  type=\"text\"\n                  className=\"stack-color-code\"\n                  value={color}\n                  onChange={onChangeColor}\n                />\n              </p>\n            </li>\n          </ul>\n          <button className=\"save-btn\" onClick={onStoreHandler}>\n            저장\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ModalStack;\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { urls } from \"../../config\";\nimport { useAxios } from \"../../hooks\";\nimport Modal from \"react-modal\";\n\nimport \"./RelatedProject.css\";\n\nModal.setAppElement(\"#root\");\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 350,\n    border: \"none\",\n  },\n};\n\nconst RelatedProject = ({ controller, info }) => {\n  const { modalIsOpen, setModalIsOpen } = controller;\n  const { stackId, title, color } = info;\n  const url = urls.stack.show + `/${stackId}`;\n  const { data, error } = useAxios({\n    method: \"get\",\n    url,\n  });\n  const relatedProjects = [];\n\n  if (!modalIsOpen) {\n    return <></>;\n  }\n\n  if (error) {\n    alert(\"데이터 조회에 실패하였습니다.\");\n    return <Redirect path=\"/stack/*\" to=\"/\" />;\n  }\n\n  if (data && data.status === 200) {\n    const { projects } = data.data;\n    projects.map((item) => {\n      relatedProjects.push(item);\n    });\n  }\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  const onMouseEnterHandler = (event) => {\n    event.target.style.backgroundColor = color;\n  };\n  const onMouseLeaveHandler = (event) => {\n    event.target.style.backgroundColor = \"initial\";\n  };\n  const relatedProjectNotExists = () => {\n    alert(\"선택하신 기술스택으로 참가한 프로젝트가 없습니다.\");\n    closeModal();\n    return;\n  };\n\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Related Project\"\n    >\n      <div className=\"related-project\">\n        <div className=\"title\" style={{ backgroundColor: color }}>\n          {title}\n        </div>\n        <div className=\"projects\">\n          <div className=\"wrapper\">\n            {relatedProjects.length === 0\n              ? relatedProjectNotExists()\n              : relatedProjects.map((element) => {\n                  return (\n                    <Link\n                      to={`project/${element.id}`}\n                      key={element.id}\n                      className=\"project\"\n                      onMouseEnter={onMouseEnterHandler}\n                      onMouseLeave={onMouseLeaveHandler}\n                    >\n                      {element.title}\n                    </Link>\n                  );\n                })}\n            {}\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default RelatedProject;\n","import React, { useState } from \"react\";\nimport { useClick } from \"../../hooks\";\nimport { RequestDelete } from \"../../axios\";\nimport { RelatedProject } from \"../Modal\";\nimport { urls } from \"../../config\";\n\nimport \"./Item.css\";\n\nconst StackItem = ({ stack, stackId }) => {\n  const url = urls.stack.delete + `/${stackId}`;\n  const token = localStorage.getItem(\"token\");\n  const { title, stackImg, color, skillful, frequency } = stack;\n\n  const onDeleteHandler = () => {\n    const nextUrl = \"/stack\";\n    const flag = window.confirm(\"삭제하시겠습니까?\");\n    if (!flag) {\n      return;\n    }\n    RequestDelete({ url, nextUrl });\n  };\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const openBtn = useClick(({ target }) => {\n    if (target.classList[0] === \"delete-btn\") {\n      return;\n    }\n\n    setModalIsOpen(true);\n  }, modalIsOpen);\n\n  return (\n    <div className=\"item\" ref={openBtn}>\n      <RelatedProject\n        controller={{ modalIsOpen, setModalIsOpen }}\n        info={{ stackId, title, color }}\n      />\n      <div className=\"top\">\n        {token ? (\n          <div className=\"delete-btn\" onClick={onDeleteHandler}>\n            &#10005;\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <div\n          className=\"img\"\n          style={{\n            background: `url(${stackImg}) center no-repeat`,\n            backgroundSize: \"contain\",\n          }}\n        ></div>\n        <div className=\"value\">\n          <div className=\"skillful\" style={{ color }}>\n            {skillful}\n          </div>\n          <div className=\"progress-background\">\n            <div\n              className=\"progress-bar\"\n              style={{ width: `${frequency}%` }}\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div className=\"bottom\" style={{ backgroundColor: color }}>\n        {title}\n      </div>\n    </div>\n  );\n};\n\nexport default StackItem;\n","import React, { useState } from \"react\";\nimport { useClick } from \"../../hooks\";\nimport {StackCreate} from \"../Modal\";\nimport \"./Add.css\";\n\nconst StackAdd = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const addBtn = useClick(() => {\n    setModalIsOpen(true);\n  }, modalIsOpen);\n\n  return (\n    <div className=\"stack-add\">\n      <div className=\"top\">\n        <button ref={addBtn} className=\"add-btn\">\n          +\n        </button>\n        <StackCreate controller={{ modalIsOpen, setModalIsOpen }} />\n      </div>\n      <div className=\"bottom\">ADD</div>\n    </div>\n  );\n};\n\nexport default StackAdd;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useAxios } from \"../../hooks\";\nimport { urls } from \"../../config\";\nimport Loading from \"../Util/Loading\";\nimport Title from \"../Util/Title\";\nimport Item from \"./Item\";\nimport Add from \"./Add\";\n\nimport \"./Home.css\";\n\nconst StackHome = () => {\n  const url = urls.stack.index;\n  const token = localStorage.getItem(\"token\");\n  const stackData = [];\n\n  const { loading, error, data } = useAxios({\n    method: \"get\",\n    url,\n  });\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (error) {\n    alert(\"데이터 조회에 실패하였습니다.\");\n    return <Redirect path=\"/project/*\" to=\"/\" />;\n  }\n\n  if (data) {\n    const { stacks } = data.data;\n    stacks.map((element) => stackData.push(element));\n  }\n\n  if (stackData.length === 0) {\n    token || alert(\"등록된 기술스택이 없습니다.\");\n\n    return (\n      <>\n        <Title titleName=\"Tech Stack\" />\n        <div className=\"stacks\">{token ? <Add /> : \"\"}</div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Title titleName=\"Tech Stack\" />\n      <div\n        className=\"stack-msg\"\n        style={{\n          fontFamily: \"Noto sans, sans-serif\",\n          fontWeight: 300,\n        }}\n      >\n        기술 스택을 클릭 시, 관련 프로젝트 정보를 확인 하실수 있습니다.{\" \"}\n      </div>\n      <div className=\"stacks\">\n        {stackData.map((element) => {\n          const { id } = element;\n          return <Item key={id} stackId={id} stack={element} />;\n        })}\n        {token ? <Add /> : \"\"}\n      </div>\n    </>\n  );\n};\n\nexport default StackHome;\n","import React from \"react\";\n\nconst StackModify = () => {\n  return <>스택 수정니다.</>;\n};\n\nexport default StackModify;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Home, Modify } from \"../components/Stack\";\nimport \"./Stack.css\";\n\nconst Stack = () => {\n  return (\n    <div className=\"stack\">\n      <Switch>\n        <Route path=\"/stack\" component={Home} />\n        <Route path=\"/stack/modify/:projectId\" component={Modify} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Stack;\n","import React from \"react\";\nimport \"./About.css\";\n\nconst About = () => {\n  const {\n    main,\n    region,\n    address: { tel, email, github },\n    career,\n    introduce,\n  } = {\n    main: \"성장하는\",\n    region: \"DAEGU\",\n    address: {\n      tel: \"010-7188-9494\",\n      email: \"wjdwotns1006@gmail.com\",\n      github: \"https://github.com/JeongJaeSoon\",\n    },\n    career: [\n      { date: \"2013.02\", value: \"경원고등학교 졸업\" },\n      { date: \"2013.03\", value: \"영진전문대학교 입학\" },\n      { date: \"2015.07\", value: \"육군 하사 임관\" },\n      { date: \"2019.07\", value: \"육군 예비역 중사 전역\" },\n    ],\n    introduce:\n      \"안녕하세요! 영진전문대학교 컴퓨터 정보계열에서 공부 중인 정재순입니다. 제 블로그에 방문해 주셔서 감사합니다. 앞으로 성장하는 개발자가 될 수 있도록 하겠습니다.\",\n  };\n  return (\n    <div className=\"about\">\n      <div className=\"header\">\n        <div className=\"profile-img\" />\n        <div className=\"profile-value\">\n          <div className=\"left\">\n            <div className=\"main-txt\">{main}</div>\n            <div className=\"txt\">개발자</div>\n            <div className=\"name-txt\">\n              <span>\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href=\"https://github.com/JeongJaeSoon\"\n                  className=\"url\"\n                  style={{ color: \"inherit\" }}\n                >\n                  정재순\n                </a>\n              </span>\n              <span>입니다.</span>\n            </div>\n          </div>\n          <div className=\"right\">\n            <div className=\"birth\">\n              <p>1994년 10월 06일</p>\n            </div>\n            <div className=\"region\">\n              <p>{region}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"section\">\n        <div className=\"address-wrapper\">\n          <div className=\"profile-title\">연락처</div>\n          <ul>\n            <li>\n              <div className=\"title\">TEL</div>\n              <div className=\"value\">{tel}</div>\n            </li>\n            <li>\n              <div className=\"title\">EMAIL</div>\n              <div className=\"value\">{email}</div>\n            </li>\n            <li>\n              <div className=\"title\">GITHUB</div>\n              <div className=\"value\">\n                <a target=\"_blank\" rel=\"noreferrer\" href={github}>\n                  {github}\n                </a>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"career-wrapper\">\n          <div className=\"profile-title\">경력사항</div>\n          <ul>\n            {career.map((element, index) => {\n              return (\n                <li key={index}>\n                  <div className=\"title\">{element.date}</div>\n                  <div className=\"value\">{element.value}</div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"introduce-wrapper\">\n          <div className=\"profile-title\">자기소개</div>\n          <div className=\"introduce\">{introduce}</div>\n          <button className=\"img-btn\">활동 사진 보기</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import \"./App.css\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport { Navigation, Footer } from \"./components\";\nimport { Main, Login, Project, Stack, About } from \"./routes\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter className=\"section\">\n        <div className=\"header\">\n          <Navigation />\n        </div>\n        <div className=\"section\">\n          <Switch>\n            <Route path=\"/\" exact={true} component={Main} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/project\" component={Project} />\n            <Route path=\"/stack\" component={Stack} />\n            <Route path=\"/about\" component={About} />\n            <Redirect path=\"*\" to=\"/\" />\n          </Switch>\n        </div>\n      </BrowserRouter>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./reset.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}